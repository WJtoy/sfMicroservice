package com.kkl.kklplus.b2b.sf.controller;
import com.kkl.kklplus.b2b.sf.entity.OrderChangeTypeEnum;
import com.kkl.kklplus.b2b.sf.http.request.UrlRequestParam;
import com.kkl.kklplus.b2b.sf.http.utils.OkHttpUtils;
import com.kkl.kklplus.b2b.sf.service.OrderHandleService;
import com.kkl.kklplus.common.exception.MSErrorCode;
import com.kkl.kklplus.common.response.MSResponse;
import com.kkl.kklplus.entity.sf.sd.SfOrderHandle;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * describe:
 *
 * @author chenxj
 * @date 2020/11/24
 */

@Slf4j
@RestController
@RequestMapping("/orderHandle")
public class OrderHandleController {
    @Autowired
    private OrderHandleService orderHandleService;

    @PostMapping("/appointment")
    public MSResponse appointment(@RequestBody SfOrderHandle sfOrderHandle){
        sfOrderHandle.setOperateCode(OrderChangeTypeEnum.SAPPOINTMENT_ED_STATE.value);
        return  orderHandleService.appointment(sfOrderHandle);
    }




    @PostMapping("/cancel")
    public MSResponse cancel(@RequestBody SfOrderHandle sfOrderHandle){
        sfOrderHandle.setOperateCode(OrderChangeTypeEnum.INSTALL_EXCEPTION.value);
        return orderHandleService.installException(sfOrderHandle);
    }


    @PostMapping("/planned")
    public MSResponse planned(@RequestBody SfOrderHandle sfOrderHandle){
        sfOrderHandle.setOperateCode(OrderChangeTypeEnum.DISPATCH_INSTALLER.value);
        return orderHandleService.installMaster(sfOrderHandle);
    }



    @PostMapping("finish")
    public MSResponse finish(@RequestBody SfOrderHandle sfOrderHandle){
        sfOrderHandle.setOperateCode(OrderChangeTypeEnum.SJOB_DONE_STATE.value);
        return orderHandleService.finish(sfOrderHandle);
    }

    @PostMapping("testPicture")
    public MSResponse testPicture(@RequestBody UrlRequestParam url){
        OkHttpUtils.getRequestFile(url.getUrl());
        return new MSResponse();
    }

}
